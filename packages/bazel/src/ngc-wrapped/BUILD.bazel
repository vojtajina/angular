# BEGIN-DEV-ONLY
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/typescript:index.bzl", "ts_library")

ts_library(
    name = "ngc_lib",
    srcs = [
        "extract_i18n.ts",
        "index.ts",
    ],
    module_name = "@angular/bazel",
    tsconfig = ":tsconfig.json",
    visibility = [
        "//packages/bazel:__pkg__",
        "//packages/bazel/test/ngc-wrapped:__subpackages__",
    ],
    deps = [
        "//packages/compiler-cli",
        "@npm//@bazel/typescript",
        "@npm//@types/node",
        "@npm//tsickle",
        "@npm//typescript",
        "@npm//typescript:typescript__typings",
    ],
)

nodejs_binary(
    name = "ngc-wrapped",
    configuration_env_vars = ["angular_ivy_enabled"],
    data = [
        ":ngc_lib",
        "//packages/bazel/third_party/github.com/bazelbuild/bazel/src/main/protobuf:worker_protocol.proto",
        "@npm//source-map-support",
        "@npm//tslib",
    ],
    entry_point = ":index.ts",
    # TODO(josephperrott): update dependency usages to no longer need bazel patch module resolver
    # See: https://github.com/bazelbuild/rules_nodejs/wiki#--bazel_patch_module_resolver-now-defaults-to-false-2324
    templated_args = ["--bazel_patch_module_resolver"],
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "xi18n",
    data = [
        ":ngc_lib",
        "@npm//source-map-support",
    ],
    entry_point = ":extract_i18n.ts",
    # TODO(josephperrott): update dependency usages to no longer need bazel patch module resolver
    # See: https://github.com/bazelbuild/rules_nodejs/wiki#--bazel_patch_module_resolver-now-defaults-to-false-2324
    templated_args = ["--bazel_patch_module_resolver"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "package_assets",
    srcs = ["BUILD.bazel"],
    visibility = ["//packages/bazel:__subpackages__"],
)
# END-DEV-ONLY
